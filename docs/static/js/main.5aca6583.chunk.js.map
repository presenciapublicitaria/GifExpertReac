{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2LAEaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACQ,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAUH,GAF/C,+DAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIGA,EAAIC,OAJP,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATvB,kBAeXM,GAfW,4CAAH,sDCANO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAIpC,OAEI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCNJO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAItB,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAAEpB,IAGEqB,EDf4BK,CAAa1B,GAAnC2B,EAAb,EAAQpB,KAAea,EAAvB,EAAuBA,QAEvB,OACI,qCACA,oBAAKJ,UAAU,yCAAf,SAA0DhB,IAExDoB,GAAW,mBAAGJ,UAAU,mDAAb,2BAEb,qBAAKA,UAAU,YAAf,SAEYW,EAASlB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEjBpBiB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAcA,cAAgBA,IAE9B,uBAMA,6BAEQ4C,EAAWpB,KAAK,SAACT,GAGb,OAAO,cAAC,EAAD,CAEHA,UAAcA,GADPA,Y,MC3BnC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5aca6583.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AddCategoria = ({ setCategorias }) =>{\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            // console.log('Submit realizado');\r\n            setCategorias( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={ handleSubmit } >\r\n                <input \r\n                    type=\"text\"\r\n                    value = { inputValue } \r\n                    onChange= { handleInputChange }\r\n                />                \r\n            </form>\r\n    )\r\n}","\r\n\r\nexport const getGif = async( categoria ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=NcbFhL3sBqVCvFo7iY08VJOFXzCkhYe7`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n    // setImagenes( gifs );\r\n    return gifs;\r\n}","import React from \"react\"\r\n\r\nexport const GifGridItem = ({id, title, url}) =>{\r\n\r\n    // console.log({id,title,url});\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* { img.title } */}\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React  from \"react\"; //{ useEffect, useState }\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    // const [imagenes, setImagenes] = useState([]);\r\n\r\n    const { data:imagenes, loading } = useFetchGifs(categoria);  \r\n    \r\n    return (\r\n        <>\r\n        <h3  className=\"animate__animated animate__fadeInRight\">{ categoria }</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash animate__slower\">Cargando ... </p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    imagenes.map( img =>(\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                         />\r\n                    ))\r\n                }\r\n\r\n        </div >\r\n        </>\r\n\r\n    )\r\n\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGif( categoria )\r\n            .then(imgs =>{ \r\n            \r\n                    // console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n        })\r\n    }, [ categoria ])\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategoria } from './components/AddCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['Samurai X'])\r\n    \r\n    // const handleAdd = () =>{\r\n    //     // setCategorias( [...categorias, 'HunterxHunter'] );\r\n    //     setCategorias( cate => [...cate, 'HunterxHunter' ] );\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            \r\n            <AddCategoria setCategorias={ setCategorias } />\r\n            \r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( (categoria) => {\r\n                        // return <li key={ categoria } > { categoria } </li>\r\n                        // return <li key={ categoria } > { categoria } </li>\r\n                        return <GifGrid \r\n                            key= { categoria }\r\n                            categoria = { categoria } \r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}